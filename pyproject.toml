[build-system]
requires = ["hatchling>=1.5.0"]
build-backend = "hatchling.build"

[project]
name = "strava-analyzer"
dynamic = ["version"]
description = "A package for analyzing Strava activity data and streams."
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
keywords = ["strava", "api", "data analysis", "activities", "streams", "metrics"]
authors = [
    { name = "Israel Barragan", email = "abraham0vidal@gmail" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "PyYAML>=6.0.1",
    "pydantic~=2.11.7",
    "pydantic-settings~=2.10.1",
    "click>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/hope0hermes/StravaAnalyzer"
Issues = "https://github.com/hope0hermes/StravaAnalyzer/issues"
Source = "https://github.com/hope0hermes/StravaAnalyzer"

[project.scripts]
strava-analyzer = "strava_analyzer.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "mypy>=1.14.1",
    "ruff>=0.9.1",
    "pylint>=3.3.4"
]
viz = [
    "jupyter>=1.1.1",
    "plotly>=6.3.1",
    "folium>=0.14.0"
]

[tool.hatch.metadata]

[tool.hatch.version]
path = "src/strava_analyzer/__init__.py"

[tool.hatch.build]
packages = ["src/strava_analyzer"]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "mypy",
    "ruff",
    "pylint",
]

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "pytest-cov",
    "ruff",
]
[tool.hatch.envs.test.scripts]
default = ["pytest {args}"]
cov = ["pytest --cov=src/strava_analyzer --cov-report=term-missing --cov-report=xml --cov-report=html {args}"]

[tool.hatch.envs.lint]
dependencies = [
    "ruff",
    "mypy",
    "pylint",
    "pydocstyle",
]
[tool.hatch.envs.lint.scripts]
default = [
    "ruff check . {args}",
    "ruff format --check . {args}",
    "python -m mypy src/strava_analyzer {args}",
    "pylint src/strava_analyzer {args}",
    "pydocstyle src/strava_analyzer {args}",
]
check = "ruff check . {args}"
format-check = "ruff format --check . {args}"
mypy = "python -m mypy src/strava_analyzer {args}"
[tool.hatch.envs.fmt]
dependencies = [
    "ruff",
]
[tool.hatch.envs.fmt.scripts]
format = "ruff format . --verbose {args}"

[tool.ruff]
target-version = "py310"
line-length = 88
exclude = ["*.ipynb"]  # Add the exclusion for Jupyter notebooks

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "B", "C4"]
ignore = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

# Configuration for Pylint
[tool.pylint]
# The 'messages control' subsection is where you disable warnings/errors.
[tool.pylint.messages_control]
disable = [
    "W1203",  # 'logging-fstring-interpolation' warning globally
    "W2301",  # Unnecessary ellipsis constant (unnecessary-ellipsis)
    "R0903",  # Too few public methods
    "R0914",  # Too many local variables (acceptable for complex calculations)
    "R0915",  # Too many statements (acceptable for CLI commands)
    "R0902",  # Too many instance attributes (acceptable for config classes)
    "R0911",  # Too many return statements (acceptable for conversion functions)
    "W0718",  # Broad exception caught (we re-raise with context)
    "W0613",  # Unused argument (kept for interface compatibility)
    "C0415",  # Import outside toplevel (used to avoid circular imports)
]

# Configuration for MyPy
[tool.mypy]
# Add the exclusion for Jupyter notebooks using a regex
exclude = '.*\.ipynb$'

[[tool.mypy.overrides]]
module = ["pandas.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["requests.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["yaml.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["scipy.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--tb=short",
    "--cov=src/strava_analyzer",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (medium speed, database/filesystem)",
    "e2e: End-to-end tests (slow, full system)",
    "slow: Tests that take a long time to run",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/strava_analyzer"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
